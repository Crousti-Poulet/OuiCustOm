<?php

namespace App\Controller;

use App\Entity\Product;
use App\Form\ProductType;
use Symfony\Component\Form\Extension\Core\Type\FileType;
use Symfony\Component\HttpFoundation\File\File;
use Symfony\Component\HttpFoundation\File\UploadedFile;
use Symfony\Component\HttpFoundation\Request;
use Doctrine\Common\Persistence\ObjectManager;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;


class UpdateController extends Controller
{
    /**
     * @Route("/updateProfile", name="updateProfile")
     */

    public function updateProfile(Request $request, ObjectManager $manager)
    {
        //récupère la table User pour y apporter des modifications
        $user = $this->getUser();

        if (!empty($user->getProfilPicture()) ){//permet de vérifier si  le champ image est vide, et ne pas la supprimer lors de l'update de profil
            $oldPicture = $user->getProfilPicture();//on créé une variable oldpicture pour garder l'anciennne image dans le cas où on ne change pas cette dernière
            $picture = new File($this->getParameter('profilPicture_directory') . '/' . $user->getProfilPicture());
            $user->setProfilPicture($picture);
        }

        $form = $this->createFormBuilder($user) // on CREE et CONFIGURE le form grace a createFormBuilder qui sera lié a $user
        ->add('username')
            ->add('email')
            ->add('location')
            ->add('phone')
            ->add('description')
            ->add('category')
            ->add('profilPicture', FileType::class)//on précise qu'il va s'agire d'un fichier
                //ainsi l'utilisateur purra choisir une image et la palcer dans ce champs



            ->getForm() ;       // on le RECUPERE




        $form->handleRequest($request);  // ANALYSE de la requete et du coup symfony lie title content avec $article

        if($form->isSubmitted() && $form->isValid()) {

            if(!$user->getId()){
                $user->setCreationDate(new \Datetime());
            }
                //upload de fichier
            //
            /** @var UploadedFile $file */
            $file = $user->getProfilPicture();

            if( $file instanceof UploadedFile){// si UploadFile est un fichier
                $fileName = $this->generateUniqueFileName().'.'. $file->guessExtension();

                //déplace le fichier image dans le dossier voulu
                $file->move(
                    $this->getParameter('profilPicture_directory'),
                    $fileName
                );
                $user->setProfilPicture($fileName);
            }else{
                $user->setProfilPicture($oldPicture);//dans le cas ou le changement, n'est pas un fichier,(ou vide) on garde l'ancienne image
            }

            $manager->flush();           //on demande au manager de lancer la requete

            return $this->redirectToRoute('artistview');
        }


        return $this->render('security/updateProfile.html.twig',[
            'updateProfile' => $form->createView(), //on envoi a twig le RESULTAT de la fonction createView () == cree un petit objet plutot type affichage.
        ]);
    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

    /**
     * @Route ("/updateUserProfile", name="updateUserProfile")
     */

    public function updateUserProfile (Request $request, ObjectManager $manager)
    {
        $user = $this->getUser();

        $form = $this->createFormBuilder($user) // on CREE et CONFIGURE le form grace a createFormBuilder qui sera lié a $user
        ->add('username')
        ->add('email')
        ->add('location')

        ->getForm() ;

        $form->handleRequest($request);

        if($form->isSubmitted() && $form->isValid()) {

            $manager->flush();
            return $this->redirectToRoute('userview');
        }
        return $this->render('security/updateUserProfile.html.twig',[
            'updateProfile' => $form->createView(),
        ]);
    }

}